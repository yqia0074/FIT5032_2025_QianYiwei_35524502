{"version":3,"file":"index.mjs","sources":["../../src/listbox/BaseListbox.vue","../../src/listbox/Listbox.vue","../../src/listbox/Listbox.vue?vue&type=template&id=52f6f439&lang.js"],"sourcesContent":["<script>\nimport BaseEditableHolder from '@primevue/core/baseeditableholder';\nimport ListboxStyle from 'primevue/listbox/style';\n\nexport default {\n    name: 'BaseListbox',\n    extends: BaseEditableHolder,\n    props: {\n        options: Array,\n        optionLabel: null,\n        optionValue: null,\n        optionDisabled: null,\n        optionGroupLabel: null,\n        optionGroupChildren: null,\n        listStyle: null,\n        scrollHeight: {\n            type: String,\n            default: '14rem'\n        },\n        dataKey: null,\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        metaKeySelection: {\n            type: Boolean,\n            default: false\n        },\n        filter: Boolean,\n        filterPlaceholder: String,\n        filterLocale: String,\n        filterMatchMode: {\n            type: String,\n            default: 'contains'\n        },\n        filterFields: {\n            type: Array,\n            default: null\n        },\n        virtualScrollerOptions: {\n            type: Object,\n            default: null\n        },\n        autoOptionFocus: {\n            type: Boolean,\n            default: true\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        focusOnHover: {\n            type: Boolean,\n            default: true\n        },\n        highlightOnSelect: {\n            type: Boolean,\n            default: true\n        },\n        checkmark: {\n            type: Boolean,\n            default: false\n        },\n        filterMessage: {\n            type: String,\n            default: null\n        },\n        selectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySelectionMessage: {\n            type: String,\n            default: null\n        },\n        emptyFilterMessage: {\n            type: String,\n            default: null\n        },\n        emptyMessage: {\n            type: String,\n            default: null\n        },\n        filterIcon: {\n            type: String,\n            default: undefined\n        },\n        striped: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        fluid: {\n            type: Boolean,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    style: ListboxStyle,\n    provide() {\n        return {\n            $pcListbox: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :id=\"$id\" :class=\"cx('root')\" @focusout=\"onFocusout\" :data-p=\"containerDataP\" v-bind=\"ptmi('root')\">\n        <span\n            ref=\"firstHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onFirstHiddenFocus\"\n            v-bind=\"ptm('hiddenFirstFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n        <div v-if=\"$slots.header\" :class=\"cx('header')\">\n            <slot name=\"header\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n        </div>\n        <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n            <IconField :unstyled=\"unstyled\" :pt=\"ptm('pcFilterContainer')\">\n                <InputText\n                    v-model=\"filterValue\"\n                    type=\"text\"\n                    :class=\"cx('pcFilter')\"\n                    :placeholder=\"filterPlaceholder\"\n                    role=\"searchbox\"\n                    autocomplete=\"off\"\n                    :disabled=\"disabled\"\n                    :unstyled=\"unstyled\"\n                    :aria-owns=\"$id + '_list'\"\n                    :aria-activedescendant=\"focusedOptionId\"\n                    :tabindex=\"!disabled && !focused ? tabindex : -1\"\n                    @input=\"onFilterChange\"\n                    @blur=\"onFilterBlur\"\n                    @keydown=\"onFilterKeyDown\"\n                    :pt=\"ptm('pcFilter')\"\n                />\n                <InputIcon :unstyled=\"unstyled\" :pt=\"ptm('pcFilterIconContainer')\">\n                    <slot name=\"filtericon\">\n                        <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                        <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                    </slot>\n                </InputIcon>\n            </IconField>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                {{ filterResultMessageText }}\n            </span>\n        </div>\n        <div :class=\"cx('listContainer')\" :style=\"[{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }, listStyle]\" v-bind=\"ptm('listContainer')\">\n            <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"[{ height: scrollHeight }, listStyle]\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                    <ul\n                        :ref=\"(el) => listRef(el, contentRef)\"\n                        :id=\"$id + '_list'\"\n                        :class=\"[cx('list'), styleClass]\"\n                        :style=\"contentStyle\"\n                        :tabindex=\"-1\"\n                        role=\"listbox\"\n                        :aria-multiselectable=\"multiple\"\n                        :aria-label=\"ariaLabel\"\n                        :aria-labelledby=\"ariaLabelledby\"\n                        :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                        :aria-disabled=\"disabled\"\n                        @focus=\"onListFocus\"\n                        @blur=\"onListBlur\"\n                        @keydown=\"onListKeyDown\"\n                        v-bind=\"ptm('list')\"\n                    >\n                        <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                            <li v-if=\"isOptionGroup(option)\" :id=\"$id + '_' + getOptionIndex(i, getItemOptions)\" :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\" :class=\"cx('optionGroup')\" role=\"option\" v-bind=\"ptm('optionGroup')\">\n                                <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionGroupLabel(option.optionGroup) }}</slot>\n                            </li>\n                            <li\n                                v-else\n                                :id=\"$id + '_' + getOptionIndex(i, getItemOptions)\"\n                                v-ripple\n                                :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                :class=\"cx('option', { option, index: i, getItemOptions })\"\n                                role=\"option\"\n                                :aria-label=\"getOptionLabel(option)\"\n                                :aria-selected=\"isSelected(option)\"\n                                :aria-disabled=\"isOptionDisabled(option)\"\n                                :aria-setsize=\"ariaSetSize\"\n                                :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                @click=\"onOptionSelect($event, option, getOptionIndex(i, getItemOptions))\"\n                                @mousedown=\"onOptionMouseDown($event, getOptionIndex(i, getItemOptions))\"\n                                @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                @touchend=\"onOptionTouchEnd()\"\n                                @dblclick=\"onOptionDblClick($event, option)\"\n                                v-bind=\"getPTOptions(option, getItemOptions, i, 'option')\"\n                                :data-p-selected=\"!checkmark && isSelected(option)\"\n                                :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                :data-p-disabled=\"isOptionDisabled(option)\"\n                            >\n                                <template v-if=\"checkmark\">\n                                    <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                    <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                </template>\n                                <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionLabel(option) }}</slot>\n                            </li>\n                        </template>\n                        <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                        </li>\n                        <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                        </li>\n                    </ul>\n                </template>\n                <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                    <slot name=\"loader\" :options=\"options\"></slot>\n                </template>\n            </VirtualScroller>\n        </div>\n        <slot name=\"footer\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n        <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ emptyMessageText }}\n        </span>\n        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ selectedMessageText }}\n        </span>\n        <span\n            ref=\"lastHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onLastHiddenFocus\"\n            v-bind=\"ptm('hiddenLastFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n    </div>\n</template>\n\n<script>\nimport { cn } from '@primeuix/utils';\nimport { findSingle, focus, getFirstFocusableElement, isElement } from '@primeuix/utils/dom';\nimport { equals, findLastIndex, isNotEmpty, isPrintableCharacter, resolveFieldData } from '@primeuix/utils/object';\nimport { FilterService } from '@primevue/core/api';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport SearchIcon from '@primevue/icons/search';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseListbox from './BaseListbox.vue';\n\nexport default {\n    name: 'Listbox',\n    extends: BaseListbox,\n    inheritAttrs: false,\n    emits: ['change', 'focus', 'blur', 'filter', 'item-dblclick', 'option-dblclick'],\n    list: null,\n    virtualScroller: null,\n    optionTouched: false,\n    startRangeIndex: -1,\n    searchTimeout: null,\n    searchValue: '',\n    data() {\n        return {\n            filterValue: null,\n            focused: false,\n            focusedOptionIndex: -1\n        };\n    },\n    watch: {\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.autoUpdateModel();\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? resolveFieldData(option, this.optionLabel) : typeof option === 'string' ? option : null;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        onFirstHiddenFocus() {\n            focus(this.list);\n\n            const firstFocusableEl = getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = isElement(firstFocusableEl) ? undefined : -1;\n            this.$refs.firstHiddenFocusableElement.tabIndex = -1;\n        },\n        onLastHiddenFocus(event) {\n            const relatedTarget = event.relatedTarget;\n\n            if (relatedTarget === this.list) {\n                const firstFocusableEl = getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n                focus(firstFocusableEl);\n                this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            } else {\n                focus(this.$refs.firstHiddenFocusableElement);\n            }\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = -1;\n        },\n        onFocusout(event) {\n            if (!this.$el.contains(event.relatedTarget) && this.$refs.lastHiddenFocusableElement && this.$refs.firstHiddenFocusableElement) {\n                this.$refs.lastHiddenFocusableElement.tabIndex = this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.findSelectedOptionIndex();\n            this.autoUpdateModel();\n            this.scrollInView(this.focusedOptionIndex);\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Tab':\n                    //NOOP\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    if (this.multiple && event.code === 'KeyA' && metaKey) {\n                        const value = this.visibleOptions.filter((option) => this.isValidOption(option)).map((option) => this.getOptionValue(option));\n\n                        this.updateModel(event, value);\n\n                        event.preventDefault();\n                        break;\n                    }\n\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchOptions(event, event.key);\n                        event.preventDefault();\n                    }\n\n                    break;\n            }\n        },\n        onOptionSelect(event, option, index = -1) {\n            if (this.disabled || this.isOptionDisabled(option)) {\n                return;\n            }\n\n            this.multiple ? this.onOptionSelectMultiple(event, option) : this.onOptionSelectSingle(event, option);\n            this.optionTouched = false;\n            index !== -1 && (this.focusedOptionIndex = index);\n        },\n        onOptionMouseDown(event, index) {\n            this.changeFocusedOptionIndex(event, index);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover && this.focused) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onOptionTouchEnd() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.optionTouched = true;\n        },\n        onOptionDblClick(event, item) {\n            this.$emit('item-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n            this.$emit('option-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n        },\n        onOptionSelectSingle(event, option) {\n            let selected = this.isSelected(option);\n            let valueChanged = false;\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n            const _value = this.getOptionValue(option) !== '' ? this.getOptionValue(option) : this.getOptionLabel(option);\n\n            if (metaSelection) {\n                let metaKey = event && (event.metaKey || event.ctrlKey);\n\n                if (selected) {\n                    if (metaKey) {\n                        value = null;\n                        valueChanged = true;\n                    }\n                } else {\n                    value = _value;\n                    valueChanged = true;\n                }\n            } else {\n                value = selected ? null : _value;\n                valueChanged = true;\n            }\n\n            if (valueChanged) {\n                this.updateModel(event, value);\n            }\n        },\n        onOptionSelectMultiple(event, option) {\n            let selected = this.isSelected(option);\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n            const _value = this.getOptionValue(option) !== '' ? this.getOptionValue(option) : this.getOptionLabel(option);\n\n            if (metaSelection) {\n                let metaKey = event.metaKey || event.ctrlKey;\n\n                if (selected) {\n                    value = metaKey ? this.removeOption(option) : [_value];\n                } else {\n                    value = metaKey ? this.d_value || [] : [];\n                    value = [...value, _value];\n                }\n            } else {\n                value = selected ? this.removeOption(option) : [...(this.d_value || []), _value];\n            }\n\n            this.updateModel(event, value);\n        },\n        onOptionSelectRange(event, start = -1, end = -1) {\n            start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n            end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n\n            if (start !== -1 && end !== -1) {\n                const rangeStart = Math.min(start, end);\n                const rangeEnd = Math.max(start, end);\n                const value = this.visibleOptions\n                    .slice(rangeStart, rangeEnd + 1)\n                    .filter((option) => this.isValidOption(option))\n                    .map((option) => this.getOptionValue(option));\n\n                this.updateModel(event, value);\n            }\n        },\n        onFilterChange(event) {\n            this.$emit('filter', { originalEvent: event, value: event.target.value, filterValue: this.visibleOptions });\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.findFirstFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.findLastFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findFirstOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findLastOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedOptionIndex !== -1) {\n                if (this.multiple && event.shiftKey) this.onOptionSelectRange(event, this.focusedOptionIndex);\n                else this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        onSpaceKey(event) {\n            event.preventDefault();\n            this.onEnterKey(event);\n        },\n        onShiftKey() {\n            this.startRangeIndex = this.focusedOptionIndex;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isEquals(value1, value2) {\n            return equals(value1, value2, this.equalityKey);\n        },\n        isSelected(option) {\n            const optionValue = this.getOptionValue(option) !== '' ? this.getOptionValue(option) : this.getOptionLabel(option);\n\n            if (this.multiple) return (this.d_value || []).some((value) => this.isEquals(value, optionValue));\n            else return this.isEquals(this.d_value, optionValue);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            if (this.$filled) {\n                if (this.multiple) {\n                    for (let index = this.d_value.length - 1; index >= 0; index--) {\n                        const value = this.d_value[index];\n                        const matchedOptionIndex = this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option) && this.isEquals(value, this.getOptionValue(option)));\n\n                        if (matchedOptionIndex > -1) return matchedOptionIndex;\n                    }\n                } else {\n                    return this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option));\n                }\n            }\n\n            return -1;\n        },\n        findFirstSelectedOptionIndex() {\n            return this.$filled ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findLastSelectedOptionIndex() {\n            return this.$filled ? findLastIndex(this.visibleOptions, (option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findNextSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.$filled && index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n        },\n        findPrevSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.$filled && index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n        },\n        findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n            let matchedOptionIndex = -1;\n\n            if (this.$filled) {\n                if (firstCheckUp) {\n                    matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n                } else {\n                    matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n                }\n            }\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findFirstSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findLastSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n\n            if (isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n        },\n        removeOption(option) {\n            return this.d_value.filter((val) => !equals(val, this.getOptionValue(option), this.equalityKey));\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus && !this.multiple) {\n                    this.onOptionSelect(event, this.visibleOptions[index]);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.$id}_${index}` : this.focusedOptionId;\n                const element = findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.$filled && !this.multiple && this.focused) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        updateModel(event, value) {\n            this.writeValue(value, event);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        optionsListFlat() {\n            return this.filterValue ? FilterService.filter(this.options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : this.options;\n        },\n        optionsListGroup() {\n            const filteredOptions = [];\n\n            (this.options || []).forEach((optionGroup) => {\n                const optionGroupChildren = this.getOptionGroupChildren(optionGroup) || [];\n                const filteredChildren = this.filterValue ? FilterService.filter(optionGroupChildren, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : optionGroupChildren;\n\n                if (filteredChildren?.length) {\n                    filteredOptions.push({ optionGroup, group: true }, ...filteredChildren);\n                }\n            });\n\n            return filteredOptions;\n        },\n        visibleOptions() {\n            return this.optionGroupLabel ? this.optionsListGroup : this.optionsListFlat;\n        },\n        // @deprecated use $filled instead\n        hasSelectedOption() {\n            return isNotEmpty(this.d_value);\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.$filled ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.d_value.length : '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.$id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        },\n        containerDataP() {\n            return cn({\n                invalid: this.$invalid,\n                disabled: this.disabled\n            });\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        InputIcon,\n        IconField,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n","<template>\n    <div :id=\"$id\" :class=\"cx('root')\" @focusout=\"onFocusout\" :data-p=\"containerDataP\" v-bind=\"ptmi('root')\">\n        <span\n            ref=\"firstHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onFirstHiddenFocus\"\n            v-bind=\"ptm('hiddenFirstFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n        <div v-if=\"$slots.header\" :class=\"cx('header')\">\n            <slot name=\"header\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n        </div>\n        <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n            <IconField :unstyled=\"unstyled\" :pt=\"ptm('pcFilterContainer')\">\n                <InputText\n                    v-model=\"filterValue\"\n                    type=\"text\"\n                    :class=\"cx('pcFilter')\"\n                    :placeholder=\"filterPlaceholder\"\n                    role=\"searchbox\"\n                    autocomplete=\"off\"\n                    :disabled=\"disabled\"\n                    :unstyled=\"unstyled\"\n                    :aria-owns=\"$id + '_list'\"\n                    :aria-activedescendant=\"focusedOptionId\"\n                    :tabindex=\"!disabled && !focused ? tabindex : -1\"\n                    @input=\"onFilterChange\"\n                    @blur=\"onFilterBlur\"\n                    @keydown=\"onFilterKeyDown\"\n                    :pt=\"ptm('pcFilter')\"\n                />\n                <InputIcon :unstyled=\"unstyled\" :pt=\"ptm('pcFilterIconContainer')\">\n                    <slot name=\"filtericon\">\n                        <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                        <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                    </slot>\n                </InputIcon>\n            </IconField>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                {{ filterResultMessageText }}\n            </span>\n        </div>\n        <div :class=\"cx('listContainer')\" :style=\"[{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }, listStyle]\" v-bind=\"ptm('listContainer')\">\n            <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"[{ height: scrollHeight }, listStyle]\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                    <ul\n                        :ref=\"(el) => listRef(el, contentRef)\"\n                        :id=\"$id + '_list'\"\n                        :class=\"[cx('list'), styleClass]\"\n                        :style=\"contentStyle\"\n                        :tabindex=\"-1\"\n                        role=\"listbox\"\n                        :aria-multiselectable=\"multiple\"\n                        :aria-label=\"ariaLabel\"\n                        :aria-labelledby=\"ariaLabelledby\"\n                        :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                        :aria-disabled=\"disabled\"\n                        @focus=\"onListFocus\"\n                        @blur=\"onListBlur\"\n                        @keydown=\"onListKeyDown\"\n                        v-bind=\"ptm('list')\"\n                    >\n                        <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                            <li v-if=\"isOptionGroup(option)\" :id=\"$id + '_' + getOptionIndex(i, getItemOptions)\" :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\" :class=\"cx('optionGroup')\" role=\"option\" v-bind=\"ptm('optionGroup')\">\n                                <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionGroupLabel(option.optionGroup) }}</slot>\n                            </li>\n                            <li\n                                v-else\n                                :id=\"$id + '_' + getOptionIndex(i, getItemOptions)\"\n                                v-ripple\n                                :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                :class=\"cx('option', { option, index: i, getItemOptions })\"\n                                role=\"option\"\n                                :aria-label=\"getOptionLabel(option)\"\n                                :aria-selected=\"isSelected(option)\"\n                                :aria-disabled=\"isOptionDisabled(option)\"\n                                :aria-setsize=\"ariaSetSize\"\n                                :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                @click=\"onOptionSelect($event, option, getOptionIndex(i, getItemOptions))\"\n                                @mousedown=\"onOptionMouseDown($event, getOptionIndex(i, getItemOptions))\"\n                                @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                @touchend=\"onOptionTouchEnd()\"\n                                @dblclick=\"onOptionDblClick($event, option)\"\n                                v-bind=\"getPTOptions(option, getItemOptions, i, 'option')\"\n                                :data-p-selected=\"!checkmark && isSelected(option)\"\n                                :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                :data-p-disabled=\"isOptionDisabled(option)\"\n                            >\n                                <template v-if=\"checkmark\">\n                                    <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                    <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                </template>\n                                <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionLabel(option) }}</slot>\n                            </li>\n                        </template>\n                        <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                        </li>\n                        <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                        </li>\n                    </ul>\n                </template>\n                <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                    <slot name=\"loader\" :options=\"options\"></slot>\n                </template>\n            </VirtualScroller>\n        </div>\n        <slot name=\"footer\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n        <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ emptyMessageText }}\n        </span>\n        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ selectedMessageText }}\n        </span>\n        <span\n            ref=\"lastHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onLastHiddenFocus\"\n            v-bind=\"ptm('hiddenLastFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n    </div>\n</template>\n\n<script>\nimport { cn } from '@primeuix/utils';\nimport { findSingle, focus, getFirstFocusableElement, isElement } from '@primeuix/utils/dom';\nimport { equals, findLastIndex, isNotEmpty, isPrintableCharacter, resolveFieldData } from '@primeuix/utils/object';\nimport { FilterService } from '@primevue/core/api';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport SearchIcon from '@primevue/icons/search';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseListbox from './BaseListbox.vue';\n\nexport default {\n    name: 'Listbox',\n    extends: BaseListbox,\n    inheritAttrs: false,\n    emits: ['change', 'focus', 'blur', 'filter', 'item-dblclick', 'option-dblclick'],\n    list: null,\n    virtualScroller: null,\n    optionTouched: false,\n    startRangeIndex: -1,\n    searchTimeout: null,\n    searchValue: '',\n    data() {\n        return {\n            filterValue: null,\n            focused: false,\n            focusedOptionIndex: -1\n        };\n    },\n    watch: {\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.autoUpdateModel();\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? resolveFieldData(option, this.optionLabel) : typeof option === 'string' ? option : null;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        onFirstHiddenFocus() {\n            focus(this.list);\n\n            const firstFocusableEl = getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = isElement(firstFocusableEl) ? undefined : -1;\n            this.$refs.firstHiddenFocusableElement.tabIndex = -1;\n        },\n        onLastHiddenFocus(event) {\n            const relatedTarget = event.relatedTarget;\n\n            if (relatedTarget === this.list) {\n                const firstFocusableEl = getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n                focus(firstFocusableEl);\n                this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            } else {\n                focus(this.$refs.firstHiddenFocusableElement);\n            }\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = -1;\n        },\n        onFocusout(event) {\n            if (!this.$el.contains(event.relatedTarget) && this.$refs.lastHiddenFocusableElement && this.$refs.firstHiddenFocusableElement) {\n                this.$refs.lastHiddenFocusableElement.tabIndex = this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.findSelectedOptionIndex();\n            this.autoUpdateModel();\n            this.scrollInView(this.focusedOptionIndex);\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Tab':\n                    //NOOP\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    if (this.multiple && event.code === 'KeyA' && metaKey) {\n                        const value = this.visibleOptions.filter((option) => this.isValidOption(option)).map((option) => this.getOptionValue(option));\n\n                        this.updateModel(event, value);\n\n                        event.preventDefault();\n                        break;\n                    }\n\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchOptions(event, event.key);\n                        event.preventDefault();\n                    }\n\n                    break;\n            }\n        },\n        onOptionSelect(event, option, index = -1) {\n            if (this.disabled || this.isOptionDisabled(option)) {\n                return;\n            }\n\n            this.multiple ? this.onOptionSelectMultiple(event, option) : this.onOptionSelectSingle(event, option);\n            this.optionTouched = false;\n            index !== -1 && (this.focusedOptionIndex = index);\n        },\n        onOptionMouseDown(event, index) {\n            this.changeFocusedOptionIndex(event, index);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover && this.focused) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onOptionTouchEnd() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.optionTouched = true;\n        },\n        onOptionDblClick(event, item) {\n            this.$emit('item-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n            this.$emit('option-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n        },\n        onOptionSelectSingle(event, option) {\n            let selected = this.isSelected(option);\n            let valueChanged = false;\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n            const _value = this.getOptionValue(option) !== '' ? this.getOptionValue(option) : this.getOptionLabel(option);\n\n            if (metaSelection) {\n                let metaKey = event && (event.metaKey || event.ctrlKey);\n\n                if (selected) {\n                    if (metaKey) {\n                        value = null;\n                        valueChanged = true;\n                    }\n                } else {\n                    value = _value;\n                    valueChanged = true;\n                }\n            } else {\n                value = selected ? null : _value;\n                valueChanged = true;\n            }\n\n            if (valueChanged) {\n                this.updateModel(event, value);\n            }\n        },\n        onOptionSelectMultiple(event, option) {\n            let selected = this.isSelected(option);\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n            const _value = this.getOptionValue(option) !== '' ? this.getOptionValue(option) : this.getOptionLabel(option);\n\n            if (metaSelection) {\n                let metaKey = event.metaKey || event.ctrlKey;\n\n                if (selected) {\n                    value = metaKey ? this.removeOption(option) : [_value];\n                } else {\n                    value = metaKey ? this.d_value || [] : [];\n                    value = [...value, _value];\n                }\n            } else {\n                value = selected ? this.removeOption(option) : [...(this.d_value || []), _value];\n            }\n\n            this.updateModel(event, value);\n        },\n        onOptionSelectRange(event, start = -1, end = -1) {\n            start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n            end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n\n            if (start !== -1 && end !== -1) {\n                const rangeStart = Math.min(start, end);\n                const rangeEnd = Math.max(start, end);\n                const value = this.visibleOptions\n                    .slice(rangeStart, rangeEnd + 1)\n                    .filter((option) => this.isValidOption(option))\n                    .map((option) => this.getOptionValue(option));\n\n                this.updateModel(event, value);\n            }\n        },\n        onFilterChange(event) {\n            this.$emit('filter', { originalEvent: event, value: event.target.value, filterValue: this.visibleOptions });\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.findFirstFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.findLastFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findFirstOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findLastOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedOptionIndex !== -1) {\n                if (this.multiple && event.shiftKey) this.onOptionSelectRange(event, this.focusedOptionIndex);\n                else this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        onSpaceKey(event) {\n            event.preventDefault();\n            this.onEnterKey(event);\n        },\n        onShiftKey() {\n            this.startRangeIndex = this.focusedOptionIndex;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isEquals(value1, value2) {\n            return equals(value1, value2, this.equalityKey);\n        },\n        isSelected(option) {\n            const optionValue = this.getOptionValue(option) !== '' ? this.getOptionValue(option) : this.getOptionLabel(option);\n\n            if (this.multiple) return (this.d_value || []).some((value) => this.isEquals(value, optionValue));\n            else return this.isEquals(this.d_value, optionValue);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            if (this.$filled) {\n                if (this.multiple) {\n                    for (let index = this.d_value.length - 1; index >= 0; index--) {\n                        const value = this.d_value[index];\n                        const matchedOptionIndex = this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option) && this.isEquals(value, this.getOptionValue(option)));\n\n                        if (matchedOptionIndex > -1) return matchedOptionIndex;\n                    }\n                } else {\n                    return this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option));\n                }\n            }\n\n            return -1;\n        },\n        findFirstSelectedOptionIndex() {\n            return this.$filled ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findLastSelectedOptionIndex() {\n            return this.$filled ? findLastIndex(this.visibleOptions, (option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findNextSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.$filled && index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n        },\n        findPrevSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.$filled && index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n        },\n        findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n            let matchedOptionIndex = -1;\n\n            if (this.$filled) {\n                if (firstCheckUp) {\n                    matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n                } else {\n                    matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n                }\n            }\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findFirstSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findLastSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n\n            if (isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n        },\n        removeOption(option) {\n            return this.d_value.filter((val) => !equals(val, this.getOptionValue(option), this.equalityKey));\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus && !this.multiple) {\n                    this.onOptionSelect(event, this.visibleOptions[index]);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.$id}_${index}` : this.focusedOptionId;\n                const element = findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.$filled && !this.multiple && this.focused) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        updateModel(event, value) {\n            this.writeValue(value, event);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        optionsListFlat() {\n            return this.filterValue ? FilterService.filter(this.options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : this.options;\n        },\n        optionsListGroup() {\n            const filteredOptions = [];\n\n            (this.options || []).forEach((optionGroup) => {\n                const optionGroupChildren = this.getOptionGroupChildren(optionGroup) || [];\n                const filteredChildren = this.filterValue ? FilterService.filter(optionGroupChildren, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : optionGroupChildren;\n\n                if (filteredChildren?.length) {\n                    filteredOptions.push({ optionGroup, group: true }, ...filteredChildren);\n                }\n            });\n\n            return filteredOptions;\n        },\n        visibleOptions() {\n            return this.optionGroupLabel ? this.optionsListGroup : this.optionsListFlat;\n        },\n        // @deprecated use $filled instead\n        hasSelectedOption() {\n            return isNotEmpty(this.d_value);\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.$filled ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.d_value.length : '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.$id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        },\n        containerDataP() {\n            return cn({\n                invalid: this.$invalid,\n                disabled: this.disabled\n            });\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        InputIcon,\n        IconField,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n"],"names":["name","BaseEditableHolder","props","options","Array","optionLabel","optionValue","optionDisabled","optionGroupLabel","optionGroupChildren","listStyle","scrollHeight","type","String","dataKey","multiple","Boolean","metaKeySelection","filter","filterPlaceholder","filterLocale","filterMatchMode","filterFields","virtualScrollerOptions","Object","autoOptionFocus","selectOnFocus","focusOnHover","highlightOnSelect","checkmark","filterMessage","selectionMessage","emptySelectionMessage","emptyFilterMessage","emptyMessage","filterIcon","undefined","striped","tabindex","Number","fluid","ariaLabel","ariaLabelledby","style","ListboxStyle","provide","$pcListbox","$parentInstance","BaseListbox","inheritAttrs","emits","list","virtualScroller","optionTouched","startRangeIndex","searchTimeout","searchValue","data","filterValue","focused","focusedOptionIndex","watch","autoUpdateModel","mounted","methods","getOptionIndex","index","fn","virtualScrollerDisabled","getOptionLabel","option","resolveFieldData","getOptionValue","getOptionRenderKey","getPTOptions","itemOptions","key","ptm","context","selected","isSelected","disabled","isOptionDisabled","isOptionGroup","optionGroup","group","getOptionGroupLabel","getOptionGroupChildren","getAriaPosInset","_this","visibleOptions","slice","length","onFirstHiddenFocus","focus","firstFocusableEl","getFirstFocusableElement","$el","$refs","lastHiddenFocusableElement","tabIndex","isElement","firstHiddenFocusableElement","onLastHiddenFocus","event","relatedTarget","onFocusout","contains","onListFocus","findFirstFocusedOptionIndex","findSelectedOptionIndex","scrollInView","$emit","onListBlur","onListKeyDown","_this2","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onSpaceKey","onShiftKey","value","isValidOption","map","updateModel","preventDefault","isPrintableCharacter","searchOptions","onOptionSelect","arguments","onOptionSelectMultiple","onOptionSelectSingle","onOptionMouseDown","changeFocusedOptionIndex","onOptionMouseMove","onOptionTouchEnd","onOptionDblClick","item","originalEvent","valueChanged","metaSelection","_value","removeOption","d_value","concat","_toConsumableArray","onOptionSelectRange","_this3","start","end","findNearestSelectedOptionIndex","rangeStart","Math","min","rangeEnd","max","onFilterChange","target","onFilterBlur","onFilterKeyDown","onArrowLeftKey","onEnterKey","optionIndex","findNextOptionIndex","shiftKey","findPrevOptionIndex","findLastFocusedOptionIndex","pressedInInputText","currentTarget","setSelectionRange","selectionStart","findFirstOptionIndex","len","findLastOptionIndex","isOptionMatched","_this$getOptionLabel","toLocaleLowerCase","startsWith","isNotEmpty","isValidSelectedOption","isEquals","value1","value2","equals","equalityKey","_this4","some","_this5","findIndex","_this6","findLastIndex","_this7","matchedOptionIndex","_this8","_this9","$filled","_loop","v","_ret","findFirstSelectedOptionIndex","_this0","findLastSelectedOptionIndex","_this1","findNextSelectedOptionIndex","_this10","findPrevSelectedOptionIndex","_this11","firstCheckUp","selectedIndex","char","_this12","clearTimeout","setTimeout","_this13","val","_this14","$nextTick","id","$id","focusedOptionId","element","findSingle","scrollIntoView","block","inline","behavior","scrollToIndex","writeValue","listRef","el","contentRef","virtualScrollerRef","computed","optionsListFlat","FilterService","searchFields","optionsListGroup","_this15","filteredOptions","forEach","filteredChildren","push","apply","hasSelectedOption","filterResultMessageText","filterMessageText","replaceAll","emptyFilterMessageText","$primevue","config","locale","searchMessage","emptySearchMessage","emptyMessageText","selectionMessageText","emptySelectionMessageText","selectedMessageText","ariaSetSize","_this16","containerDataP","cn","invalid","$invalid","directives","ripple","Ripple","components","InputText","VirtualScroller","InputIcon","IconField","SearchIcon","CheckIcon","BlankIcon","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","$options","ptmi","_createElementVNode","ref","role","onFocus","$slots","header","_renderSlot","_createVNode","_component_IconField","unstyled","pt","_component_InputText","$data","$event","placeholder","autocomplete","onInput","onBlur","onKeydown","_component_InputIcon","_createBlock","_component_SearchIcon","_component_VirtualScroller","items","height","content","_withCtx","_ref","styleClass","getItemOptions","contentStyle","itemSize","_Fragment","_renderList","i","_withDirectives","onClick","onMousedown","onMousemove","onTouchend","onDblclick","ref_for","_component_CheckIcon","_component_BlankIcon","_createTextVNode","_toDisplayString","loader","_ref2"],"mappings":"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"}